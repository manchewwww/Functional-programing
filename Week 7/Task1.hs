-- Едно естествено число се нарича „четновато“ (evenly),
-- ако броят на делителите му (вкл. 1 и самото число) е четно число.
-- В частност, първите три „четновати“ числа са 2(делителите са 1 и 2),
-- 3 (делителите са 1 и 3 или общо 2 на брой) и
-- 5 (делителите са 1 и 5 или общо 2 на брой).
-- Да се дефинира функция sumOfEvenly :: Int -> Int -> Int,
-- която да намира
-- сумата от всички „четновати“ числа в интервала [a,b],
-- където a и b са цели числа и 1 <= a <= b <= 1000

main :: IO()
main = do
    print $ sumOfEvenly 1 10 == 41 -- 2+3+5+6+7+8+10
    print $ sumOfEvenly 5 20 == 175 -- 5+6+7+8+10+11+12+13+14+15+17+18+19+20

sumOfEvenly :: Int -> Int -> Int
sumOfEvenly x y = sum $ filter isEvenly [x .. y]

isEvenly :: Int -> Bool
isEvenly num = even $ length [x | x <- [1 .. num], mod num x == 0]